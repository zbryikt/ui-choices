// Generated by LiveScript 1.2.0
angular.module('ui.choices', []).directive('choices', function($compile){
  return {
    restrict: 'E',
    replace: true,
    transclude: true,
    scope: {
      model: '=ngModel',
      id: '='
    },
    template: "<div class='btn-group' data-toggle='buttons' ng-transclude></div>",
    link: function(scope, element, attrs){
      scope.type = attrs.type;
      element.on('count-active', function(){
        var res$, i$, ref$, len$, e, v;
        if (scope.type === "array") {
          res$ = [];
          for (i$ = 0, len$ = (ref$ = element.find('label.active')).length; i$ < len$; ++i$) {
            e = ref$[i$];
            res$.push($(e).attr('value'));
          }
          scope.model = res$;
        } else {
          if (typeof scope.model !== typeof {}) {
            scope.model = {};
          }
          res$ = [];
          for (i$ = 0, len$ = (ref$ = element.find('label')).length; i$ < len$; ++i$) {
            e = ref$[i$];
            res$.push([e.className, $(e).attr('value')]);
          }
          v = res$;
          v.filter(function(it){
            return it[0].search("active") >= 0;
          }).map(function(it){
            return (scope.model || (scope.model = {}))[it[1]] = true;
          });
          v.filter(function(it){
            return it[0].search("active") < 0;
          }).map(function(it){
            return (scope.model || (scope.model = {}))[it[1]] = false;
          });
        }
        return scope.$apply();
      });
      return scope.$watch('model', function(v){
        var res$, i$, len$, x, ref$, it, results$ = [];
        if (!v || !v.length) {
          return;
        }
        res$ = [];
        for (i$ = 0, len$ = v.length; i$ < len$; ++i$) {
          x = v[i$];
          res$.push(x + "");
        }
        v = res$;
        for (i$ = 0, len$ = (ref$ = element.find('label')).length; i$ < len$; ++i$) {
          it = ref$[i$];
          it = $(it);
          if (in$(it.attr('value'), v)) {
            results$.push(it.addClass('active'));
          } else {
            results$.push(it.removeClass('active'));
          }
        }
        return results$;
      }, true);
    },
    controller: function($scope, $element){
      $scope.multiple = $element.attr('multiple');
      $scope.btnType = $element.attr('btn-type');
      this.isMultiple = function(){
        return $scope.multiple;
      };
      return this.btnType = function(){
        return $scope.btnType;
      };
    }
  };
}).directive('choice', function($compile){
  return {
    restrict: 'E',
    transclude: true,
    replace: true,
    require: "^choices",
    template: "<label class='btn'><input type='radio'><span ng-transclude></span></label>",
    link: function(scope, element, attrs, ctrl){
      var that;
      element.addClass((that = ctrl.btnType()) ? that : 'btn-primary');
      if (ctrl.isMultiple()) {
        element.find('input').attr('type', 'checkbox');
      }
      return element.on('click', function(){
        return setTimeout(function(){
          return element.parent().trigger('count-active');
        }, 0);
      });
    }
  };
});
function in$(x, xs){
  var i = -1, l = xs.length >>> 0;
  while (++i < l) if (x === xs[i]) return true;
  return false;
}